{
  "features": [
    {
      "id": "F1",
      "component": "Node.js Backend",
      "feature": "Server Health Check",
      "command": "curl -s http://localhost:3001/live",
      "expected": "200 OK with {\"status\":\"alive\"}",
      "status": "VERIFIED",
      "evidence": "evidence/live_endpoint_test.txt"
    },
    {
      "id": "F2",
      "component": "Node.js Backend",
      "feature": "Research Visualization Data API",
      "command": "curl -s http://localhost:3001/api/research/visualization-data/network",
      "expected": "JSON response with visualization data",
      "status": "UNVERIFIED",
      "evidence": "evidence/visualization_api_test.txt"
    },
    {
      "id": "F3",
      "component": "Node.js Backend",
      "feature": "Network Topology API",
      "command": "curl -s http://localhost:3001/api/research/network-topology",
      "expected": "JSON response with network topology",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F4",
      "component": "Node.js Backend",
      "feature": "Update Metrics API",
      "command": "curl -s -X POST -H 'Content-Type: application/json' -d '{\"metrics\":[30,49,28]}' http://localhost:3001/api/research/update-metrics",
      "expected": "JSON confirmation response",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F5",
      "component": "Node.js Backend",
      "feature": "Prometheus Metrics Endpoint",
      "command": "curl -s http://localhost:3001/metrics",
      "expected": "Prometheus format metrics",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F6",
      "component": "Node.js Backend",
      "feature": "JSON Metrics Endpoint",
      "command": "curl -s http://localhost:3001/metrics.json",
      "expected": "JSON format metrics",
      "status": "UNVERIFIED",
      "evidence": "evidence/metrics_json_test.txt"
    },
    {
      "id": "F7",
      "component": "Node.js Backend",
      "feature": "Readiness Check",
      "command": "curl -s http://localhost:3001/ready",
      "expected": "200 OK with readiness status",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F8",
      "component": "Frontend",
      "feature": "Vite Build Process",
      "command": "cd frontend && npm run build",
      "expected": "Successful build with dist/ output",
      "status": "VERIFIED",
      "evidence": "evidence/frontend_build_test.txt"
    },
    {
      "id": "F9",
      "component": "Frontend",
      "feature": "Development Server",
      "command": "cd frontend && npm run dev",
      "expected": "Server starts on port 3000",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F10",
      "component": "Frontend",
      "feature": "Three.js Integration",
      "command": "grep -r 'import.*three' frontend/src/",
      "expected": "Three.js imports found in source",
      "status": "VERIFIED",
      "evidence": "evidence/threejs_integration_test.txt"
    },
    {
      "id": "F11",
      "component": "Java Analytics",
      "feature": "Maven Build",
      "command": "cd backend/java-services && mvn clean compile",
      "expected": "Successful compilation",
      "status": "UNVERIFIED",
      "evidence": "evidence/maven_missing.txt"
    },
    {
      "id": "F12",
      "component": "Java Analytics",
      "feature": "Spring Boot Application",
      "command": "cd backend/java-services && mvn spring-boot:run",
      "expected": "Application starts on port 8080",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F13",
      "component": "Java Analytics",
      "feature": "Research Trends API",
      "command": "curl -s http://localhost:8080/api/analytics/research-trends",
      "expected": "JSON response with research trends",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F14",
      "component": "Java Analytics",
      "feature": "Network Analysis API",
      "command": "curl -s -X POST -H 'Content-Type: application/json' -d '[\"alignment\",\"safety\"]' http://localhost:8080/api/analytics/network-analysis",
      "expected": "JSON response with network analysis",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F15",
      "component": "C++ Engine",
      "feature": "CMake Configuration",
      "command": "cd backend/cpp-engine && cmake .",
      "expected": "Successful CMake configuration",
      "status": "VERIFIED",
      "evidence": "evidence/cmake_config_test.txt"
    },
    {
      "id": "F16",
      "component": "C++ Engine",
      "feature": "Library Compilation",
      "command": "cd backend/cpp-engine && make",
      "expected": "Successful compilation of data_processor library",
      "status": "UNVERIFIED",
      "evidence": "evidence/cpp_compilation_error.txt"
    },
    {
      "id": "F17",
      "component": "C++ Engine",
      "feature": "Data Processor Source",
      "command": "ls -la backend/cpp-engine/src/data_processor.cpp",
      "expected": "Source file exists",
      "status": "VERIFIED",
      "evidence": "evidence/cpp_source_exists.txt"
    },
    {
      "id": "F18",
      "component": "Integration",
      "feature": "Socket.IO Connection",
      "command": "node -e \"const io = require('socket.io-client'); console.log('Socket.IO available');\"",
      "expected": "No import errors",
      "status": "UNVERIFIED",
      "evidence": null
    },
    {
      "id": "F24",
      "component": "Frontend",
      "feature": "Notion Research Board Embed",
      "command": "grep -n 'opalescent-physician' index.html",
      "expected": "Iframe embed present in landing page",
      "status": "VERIFIED",
      "evidence": "evidence/notion_embed_grep.txt"
    }
  ],
  "summary": {
    "total_features": 19,
    "verified": 6,
    "unverified": 13,
    "success_rate": "31.6%"
  },
  "blockers": [
    "Maven not installed (required for Java services)",
    "Missing C++ system dependencies: libboost-dev, libjsoncpp-dev",
    "Redis server not running (required for Node.js backend)",
    "PostgreSQL server not running (required for Node.js backend)",
    "Playwright browsers require sudo installation"
  ]
}
