[
  {
    "id": "F1",
    "feature": "Start Node research server",
    "command": "cd backend/node-server && node src/server.js",
    "expected_signal": "Console logs show 'REAL Houston Oil Airs server running' and port binding succeeds on $PORT.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F2",
    "feature": "GET /api/research/visualization-data/:category returns research_points",
    "command": "curl -sS http://localhost:3001/api/research/visualization-data/alignment",
    "expected_signal": "HTTP 200 JSON with research_points[] populated and total_count > 0.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F3",
    "feature": "POST /api/research/update-metrics persists readings",
    "command": "curl -sS -H 'Content-Type: application/json' -d '{\"metrics\":[30,49,28,65,1],\"device_id\":\"sensor_001\"}' http://localhost:3001/api/research/update-metrics",
    "expected_signal": "HTTP 200 JSON {\"success\":true,\"processed\":5} and postgres row inserted.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F4",
    "feature": "GET /metrics exposes Prometheus counters",
    "command": "curl -sS http://localhost:3001/metrics",
    "expected_signal": "HTTP 200 text with houston_sensor_readings_total gauge values.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F5",
    "feature": "GET /ready checks postgres and redis dependencies",
    "command": "curl -sS http://localhost:3001/ready",
    "expected_signal": "HTTP 200 JSON when both dependencies reachable; 503 otherwise.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F6",
    "feature": "Run backend/node-server Jest integration suite",
    "command": "cd backend/node-server && npm test -- --runTestsByPath test/server.integration.test.js",
    "expected_signal": "Jest exits 0 with PASS summary.",
    "status": "UNVERIFIED",
    "evidence": "evidence/2024-01-01T000000Z_npm_test.log"
  },
  {
    "id": "F7",
    "feature": "Build analytics Spring Boot service",
    "command": "cd backend/java-services && mvn -B -DskipTests package",
    "expected_signal": "Build ends with 'BUILD SUCCESS' and target/*.jar produced.",
    "status": "UNVERIFIED",
    "evidence": null
  },
  {
    "id": "F8",
    "feature": "POST /api/analytics/network-analysis returns nodes and edges",
    "command": "curl -sS -H 'Content-Type: application/json' -d '[\"alignment\",\"safety\"]' http://localhost:8080/api/analytics/network-analysis",
    "expected_signal": "HTTP 200 JSON with nodes[] and edges[].",
    "status": "UNVERIFIED",
    "evidence": null
  }
]
